[{"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/index.jsx":"1","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/store.jsx":"2","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/App.jsx":"3","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/reportWebVitals.jsx":"4","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/reducers/Cartreducers.jsx":"5","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/reducers/Orderreducers.jsx":"6","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/reducers/Userreducers.jsx":"7","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/actions/Restaurantactions.jsx":"8","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/actions/Useractions.jsx":"9","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/actions/Cartactions.jsx":"10","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/actions/Orderactions.jsx":"11","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Navbar.jsx":"12","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Hotel.jsx":"13","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Hotelmenu.jsx":"14","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/LoginScreen.jsx":"15","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Cartscreen.jsx":"16","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Registerscreen.jsx":"17","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Profilescreen.jsx":"18","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Shippingscreen.jsx":"19","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Placeorderscreen.jsx":"20","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Paymentscreen.jsx":"21","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Orderscreen.jsx":"22","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Detailscreen.jsx":"23","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Loader.jsx":"24","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Carosuel.jsx":"25","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/setBodyColor.jsx":"26","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Message.jsx":"27","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Messageloginscreen.jsx":"28","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Messagecart.jsx":"29","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Messageprofilescreen.jsx":"30","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Messageregisterscreen.jsx":"31","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Checkoutsteps.jsx":"32","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Messageorderscreen.jsx":"33","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/constants/Userconstants.jsx":"34","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/chatbot.jsx":"35","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Offer.jsx":"36","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Help.jsx":"37","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Chatbot.jsx":"38","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/reducers/Restaurantreducers.jsx":"39","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/constants/Restaurantconstants.jsx":"40","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/constants/Orderconstants.jsx":"41","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/constants/Cartconstants.jsx":"42","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Notfound404.jsx":"43"},{"size":685,"mtime":1696523700532,"results":"44","hashOfConfig":"45"},{"size":1682,"mtime":1696520615179,"results":"46","hashOfConfig":"45"},{"size":158,"mtime":1696519834855,"results":"47","hashOfConfig":"45"},{"size":362,"mtime":1692544276000,"results":"48","hashOfConfig":"45"},{"size":1587,"mtime":1696520654063,"results":"49","hashOfConfig":"45"},{"size":3028,"mtime":1696520744191,"results":"50","hashOfConfig":"45"},{"size":2512,"mtime":1696519895429,"results":"51","hashOfConfig":"45"},{"size":2259,"mtime":1696520669380,"results":"52","hashOfConfig":"45"},{"size":4087,"mtime":1696520673287,"results":"53","hashOfConfig":"45"},{"size":1481,"mtime":1696520661843,"results":"54","hashOfConfig":"45"},{"size":4654,"mtime":1696520681509,"results":"55","hashOfConfig":"45"},{"size":12587,"mtime":1696521543885,"results":"56","hashOfConfig":"45"},{"size":5824,"mtime":1696520218287,"results":"57","hashOfConfig":"45"},{"size":13088,"mtime":1696520475077,"results":"58","hashOfConfig":"45"},{"size":3501,"mtime":1695791354000,"results":"59","hashOfConfig":"45"},{"size":4376,"mtime":1695990774000,"results":"60","hashOfConfig":"45"},{"size":4669,"mtime":1695959552000,"results":"61","hashOfConfig":"45"},{"size":9647,"mtime":1696520714312,"results":"62","hashOfConfig":"45"},{"size":5199,"mtime":1695887764000,"results":"63","hashOfConfig":"45"},{"size":8654,"mtime":1696520708093,"results":"64","hashOfConfig":"45"},{"size":2270,"mtime":1695990934000,"results":"65","hashOfConfig":"45"},{"size":12783,"mtime":1696520763030,"results":"66","hashOfConfig":"45"},{"size":6473,"mtime":1695893346000,"results":"67","hashOfConfig":"45"},{"size":438,"mtime":1693579972000,"results":"68","hashOfConfig":"45"},{"size":2094,"mtime":1696520184350,"results":"69","hashOfConfig":"45"},{"size":122,"mtime":1695787148000,"results":"70","hashOfConfig":"45"},{"size":244,"mtime":1693926362000,"results":"71","hashOfConfig":"45"},{"size":241,"mtime":1693740426000,"results":"72","hashOfConfig":"45"},{"size":368,"mtime":1693591058000,"results":"73","hashOfConfig":"45"},{"size":262,"mtime":1695990858000,"results":"74","hashOfConfig":"45"},{"size":238,"mtime":1695959410000,"results":"75","hashOfConfig":"45"},{"size":2454,"mtime":1695794952000,"results":"76","hashOfConfig":"45"},{"size":322,"mtime":1695796336000,"results":"77","hashOfConfig":"45"},{"size":878,"mtime":1693822078000,"results":"78","hashOfConfig":"45"},{"size":2680,"mtime":1696520402228,"results":"79","hashOfConfig":"45"},{"size":5334,"mtime":1696521440477,"results":"80","hashOfConfig":"45"},{"size":3158,"mtime":1696520577321,"results":"81","hashOfConfig":"45"},{"size":2680,"mtime":1696520402228,"results":"82","hashOfConfig":"45"},{"size":1092,"mtime":1696520638801,"results":"83","hashOfConfig":"45"},{"size":384,"mtime":1693581154000,"results":"84","hashOfConfig":"45"},{"size":1326,"mtime":1695890462000,"results":"85","hashOfConfig":"45"},{"size":356,"mtime":1693978512000,"results":"86","hashOfConfig":"45"},{"size":506,"mtime":1696522509364,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tyywla",{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/index.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/store.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/App.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/reportWebVitals.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/reducers/Cartreducers.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/reducers/Orderreducers.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/reducers/Userreducers.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/actions/Restaurantactions.jsx",["230","231","232"],[],"import axios from 'axios'\r\nimport { RESTAURANT_LIST_REQUEST,\r\n    RESTAURANT_LIST_SUCCESS,\r\n    RESTAURANT_LIST_FAIL,\r\n    RESTAURANT_DETAIL_REQUEST,\r\n    RESTAURANT_DETAIL_SUCCESS,\r\n    RESTAURANT_DETAIL_FAIL } from '../constants/Restaurantconstants'\r\nexport const listRestaurants=(name)=>async(dispatch)=>{\r\n    try{\r\n        dispatch({type:RESTAURANT_LIST_REQUEST})\r\n        const {data}=await axios.get('/api/restaurants/')\r\n        const fildata=data.filter((i)=>{\r\n            if (name==\"\")\r\n            {\r\n                return true\r\n            }\r\n            else{\r\n            if(i.name.toLowerCase().includes(name)!==false)\r\n            {\r\n                return true\r\n            }\r\n            else\r\n            {\r\n                return false\r\n            }\r\n        }\r\n        })\r\n        dispatch({\r\n            type:RESTAURANT_LIST_SUCCESS,\r\n            payload:fildata\r\n        })\r\n    }catch(error){\r\n        dispatch({\r\n            type:RESTAURANT_LIST_FAIL,\r\n            payload:error.response && error.response.data.detail?error.response.data.detail:error.response\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listRestaurantsDetail=(id,name)=>async(dispatch)=>{\r\n    try{\r\n        dispatch({type:RESTAURANT_DETAIL_REQUEST})\r\n        const {data}=await axios.get(`/api/restaurant/${id}`)\r\n        const fildata=data.content.filter((i)=>{\r\n            \r\n            if (name==\"\")\r\n            {\r\n                return true\r\n            }\r\n            else{\r\n            if(i.name.toLowerCase().indexOf(name)!=-1)\r\n            {\r\n                return true\r\n            }\r\n            else\r\n            {\r\n                return false\r\n            }\r\n        }\r\n    \r\n\r\n    })\r\n\r\n        \r\n        dispatch({\r\n            type:RESTAURANT_DETAIL_SUCCESS,\r\n            payload:{id: data.id,\r\n            name: data.name,\r\n            description: data.description,\r\n            rating: data.rating,\r\n            time: data.time,\r\n            price: data.price,\r\n            path: data.path,\r\n            content:fildata}\r\n        })\r\n    }catch(error){\r\n        dispatch({\r\n            type:RESTAURANT_DETAIL_FAIL,\r\n            payload:error.response && error.response.data.detail?error.response.data.detail:error.response\r\n        })\r\n    }\r\n}","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/actions/Useractions.jsx",["233"],[],"import axios from 'axios'\r\nimport { USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET, } from '../constants/Userconstants'\r\n    import { ORDER_LIST_MY_RESET } from '../constants/Orderconstants'\r\nexport const login=(email,password)=>async(dispatch)=>{\r\n    try{\r\n        dispatch({\r\n            type:USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config={\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n        const{data}=await axios.post('/api/users/login/',\r\n        {'username':email,'password':password},config)\r\n\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type:USER_LOGIN_FAIL,\r\n            payload:error.response && error.response.data.detail?error.response.data.detail:error.response\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const register=(name,email,password)=>async(dispatch,getState)=>{\r\n    try{\r\n        dispatch({\r\n            type:USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config={\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n        const{data}=await axios.post(`/api/users/register/`,{ 'name': name, 'email': email, 'password': password },config)\r\n\r\n        dispatch({\r\n            type:USER_REGISTER_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type:USER_REGISTER_FAIL,\r\n            payload:error.response && error.response.data.detail?error.response.data.detail:error.response\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout=()=>(dispatch)=>{\r\n    dispatch({type:USER_LOGOUT})\r\n    dispatch({type:USER_DETAILS_RESET})\r\n    dispatch({type:ORDER_LIST_MY_RESET})\r\n    localStorage.removeItem('userInfo')\r\n}\r\n\r\nexport const getUserDetails=(id)=>async(dispatch,getState)=>{\r\n    try{\r\n        dispatch({\r\n            type:USER_DETAILS_REQUEST\r\n        })\r\n        const{userLogin:{userInfo},}=getState()\r\n        const config={\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const{data}=await axios.get(`/api/users/${id}/`,config)\r\n\r\n        dispatch({\r\n            type:USER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type:USER_DETAILS_FAIL,\r\n            payload:error.response && error.response.data.detail?error.response.data.detail:error.response\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile=(user)=>async(dispatch,getState)=>{\r\n    try{\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n        const{userLogin:{userInfo},}=getState()\r\n        const config={\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const{data}=await axios.put('/api/users/profile/update/',user,config)\r\n\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }catch(error){\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_FAIL,\r\n            payload:error.response && error.response.data.detail?error.response.data.detail:error.response\r\n        })\r\n    }\r\n}","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/actions/Cartactions.jsx",["234"],[],"import axios from \"axios\";\r\nimport { CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD } from '../constants/Cartconstants'\r\nexport const addtocart=(rid,mid,qty)=>async(dispatch,getState)=>{\r\nconst {data}=await axios.get(`/api/restaurant/${rid}`)\r\nconst fildata=data.content.filter((i)=>{\r\n    if(i.id==mid)\r\n    {\r\n        return true\r\n    }\r\n    else\r\n    {\r\n        return false\r\n    }\r\n    \r\n})\r\n\r\ndispatch({\r\n    type:CART_ADD_ITEM,\r\n    payload:{\r\n        restaurantname:data.name,\r\n        restaurantid:fildata[0].restaurant,\r\n        id:fildata[0].id,\r\n        name:fildata[0].name,\r\n        image:fildata[0].img,\r\n        price:fildata[0].price,\r\n        quantity:parseInt(qty)\r\n}\r\n},[dispatch])\r\nlocalStorage.setItem(\"cartItems\",JSON.stringify(getState().cart.cartItems))\r\n}\r\nexport const removefromcart=(id)=>(dispatch,getState)=>{\r\n    dispatch({\r\n        type:CART_REMOVE_ITEM,\r\n        payload:id,\r\n    })\r\n    localStorage.setItem(\"cartItems\",JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress=(data)=>(dispatch )=>{\r\n    dispatch({\r\n        type:CART_SAVE_SHIPPING_ADDRESS,\r\n        payload:data,\r\n    })\r\n    localStorage.setItem(\"shippingAddress\",JSON.stringify(data))\r\n}\r\nexport const savePaymentMethod=(data)=>(dispatch )=>{\r\n    dispatch({\r\n        type:CART_SAVE_PAYMENT_METHOD,\r\n        payload:data,\r\n    })\r\n    localStorage.setItem(\"paymentMethod\",JSON.stringify(data))\r\n}\r\n","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/actions/Orderactions.jsx",["235","236","237","238","239","240","241","242","243"],[],"import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/Orderconstants'\r\nimport { CART_CLEAR_ITEMS,CART_RESET_SHIPPING_ADDRESS } from '../constants/Cartconstants'\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: CART_RESET_SHIPPING_ADDRESS,\r\n            payload: data\r\n        })\r\n        localStorage.removeItem('shippingAddress')\r\n        localStorage.removeItem('cartItems')\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Navbar.jsx",["244","245","246"],[],"import React from \"react\";\r\nimport brand_img from \"../images/brand_img1.png\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport \"../styles/Navbar.css\";\r\nimport { listRestaurants } from \"../actions/Restaurantactions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavDropdown} from 'react-bootstrap'\r\nimport { logout } from '../actions/Useractions'\r\nimport Home from \"./Hotel\";\r\nimport Offer from \"./Offer\";\r\nimport Help from \"./Help\";\r\nimport Hotelmenu from \"./Hotelmenu\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Cartscreen from \"./Cartscreen\";\r\nimport LoginScreen from \"./LoginScreen\";\r\nimport Registerscreen from \"./Registerscreen\";\r\nimport Profilescreen from \"./Profilescreen\";\r\nimport Shippingscreen from \"./Shippingscreen\";\r\nimport Paymentscreen from \"./Paymentscreen\";\r\nimport Placeorderscreen from \"./Placeorderscreen\";\r\nimport Orderscreen from \"./Orderscreen\";\r\nimport Detailscreen from \"./Detailscreen\";\r\nimport Notfound404 from \"./Notfound404\";\r\n\r\nfunction Navbar() {\r\n  const dispatch = useDispatch();\r\n  const restaurantList = useSelector((state) => state.restaurantList);\r\n  const { error, loading, restaurants } = restaurantList;\r\n  const userLogin=useSelector((state)=>state.userLogin)\r\n  const{userInfo}=userLogin\r\n  useEffect(() => {\r\n    dispatch(listRestaurants(\"\"));\r\n  }, [dispatch]);\r\n  \r\n  \r\n  \r\n\r\n  const [value, setvalue] = useState(true);\r\n  const [align, setalign] = useState(\"left\");\r\n  const [color, setcolor] = useState(\"white\");\r\n  const [colornav, setnavcolor] = useState(\"white\");\r\n  const [e, sete] = useState(false);\r\n  function togglemode() {\r\n    if (color === \"black\") {\r\n      setnavcolor(\"light\");\r\n      setcolor(\"white\");\r\n    } else if (color === \"white\") {\r\n      setnavcolor(\"dark\");\r\n      setcolor(\"black\");\r\n    }\r\n  }\r\n  function logouthandler(){\r\n    dispatch(logout())\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg bg-body-tertiary fixed-top bg-${colornav} text-${\r\n          colornav === \"dark\" ? \"light\" : \"dark\"\r\n        }`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\" onClick={() => sete(true)}>\r\n            <img\r\n              src={brand_img}\r\n              height=\"60px\"\r\n              width=\"60px\"\r\n              alt=\"brand_img\"\r\n\r\n            />\r\n            <span\r\n              className=\"font-weight-bold\"\r\n              style={{\r\n                fontFamily: \"Verdana, Geneva, Tahoma, sans-serif\",\r\n                color: `${color === \"black\" ? \"orange\" : \"#6b3a1b\"}`,\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Eat24 \r\n            </span>\r\n          </Link>\r\n          \r\n            <div className=\"dropdown nav-link\"  id=\"search1\" style={{width:\"15%\",height:\"80%\"}}>\r\n            <Link\r\n              id=\"search2\"\r\n              to=\"/\"\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <form\r\n                className=\"d-flex\"\r\n                role=\"search\"\r\n                autocomplete=\"off\"\r\n                autocapitalize=\"Link-zA-Z0-9\"\r\n              >\r\n                <input className=\"form-control me-2\"  type=\"text\" placeholder=\"Search\" aria-label=\"Search\"  onChange={(e)=>{dispatch(listRestaurants(e.target.value))}}/>\r\n                <button\r\n                  className=\"btn btn-outline-warning\"\r\n                  style={{ height: \"32px\" }}\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    style={{ paddingBottom: \"4\", width: \"15px\" }}\r\n                    fill=\"currentColor\"\r\n                    className=\"bi bi-search\"\r\n                    viewBox=\"0 0 16 16\"\r\n                  >\r\n                    <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\r\n                  </svg>\r\n                </button>\r\n              </form>\r\n              </Link>\r\n            </div>\r\n          \r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            <span>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                fill=\"currentColor\"\r\n                className=\"bi bi-list\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path\r\n                  fill-rule=\"evenodd\"\r\n                  d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\r\n                />\r\n              </svg>\r\n            </span>\r\n          </button>\r\n          <div\r\n            className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item pl-3\">\r\n           \r\n          </li>\r\n              <li className=\"nav-item pl-3\">\r\n                <Link\r\n                \r\n                  className=\"nav-link\"\r\n                  to=\"/Offer\"\r\n                  style={{ color: `${color === \"black\" ? \"white\" : \"black\"}` ,userSelect:\"none\"}}\r\n                  onClick={() => sete(true)}\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"13\"\r\n                    fill=\"currentColor\"\r\n                    className=\"bi bi-percent\"\r\n                    viewBox=\"0 0 16 16\"\r\n                  >\r\n                    <path d=\"M13.442 2.558a.625.625 0 0 1 0 .884l-10 10a.625.625 0 1 1-.884-.884l10-10a.625.625 0 0 1 .884 0zM4.5 6a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm0 1a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5zm7 6a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm0 1a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z\" />\r\n                  </svg>\r\n                  Offers\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item pl-3\">\r\n                <Link \r\n                  className=\"nav-link\"\r\n                  to=\"/Help\"\r\n                  style={{ color: `${color === \"black\" ? \"white\" : \"black\"}`,userSelect:\"none\" }}\r\n                  onClick={() => sete(false)}\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"16\"\r\n                    height=\"16\"\r\n                    fill=\"currentColor\"\r\n                    className=\"bi bi-info-circle\"\r\n                    viewBox=\"0 0 16 16\"\r\n                  >\r\n                    <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n                    <path d=\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\" />\r\n                  </svg>{\" \"}\r\n                  Help\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item pl-5 pt-2 custom-control custom-switch\">\r\n                <input  \r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  id=\"customSwitch1\"\r\n                  onClick={togglemode}\r\n                />\r\n                <label \r\n                  className=\"custom-control-label\"\r\n                  for=\"customSwitch1\"\r\n                  style={{ color: `${color === \"black\" ? \"white\" : \"black\"}`,userSelect:\"none\"}}\r\n                >\r\n                  Dark Mode\r\n                </label>\r\n              </li>\r\n              <li className=\"nav-item pl-3\">\r\n                {userInfo?(<>\r\n                 \r\n                  <NavDropdown  title={<span style={{ color: `${color === \"black\" ? \"white\" : \"black\"}`,userSelect:\"none\"}}>\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"20\"\r\n                    height=\"20\"\r\n                    fill=\"currentColor\"\r\n                    class=\"bi bi-person-fill\"\r\n                    viewBox=\"0 2 16 16\"\r\n                  >\r\n                    <path d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3Zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z\" />\r\n                  </svg>{\" \"}\r\n                    {userInfo.name}</span>} id=\"username\">\r\n                    <NavDropdown.Item  style={{userSelect:\"none\"}}>\r\n                    <Link style={{textDecoration:\"none \",color: `${color === \"black\" ? \"black\" : \"black\"}`}}  to=\"/profile\" className=\"nav-link\" data-toggle=\"collapse\"\r\n                    data-target=\"#navbarNav\">Profile</Link>\r\n                    </NavDropdown.Item>\r\n                    \r\n                    <NavDropdown.Item onClick={logouthandler}  style={{userSelect:\"none\"}}>\r\n                      <Link to=\"/\" className=\"nav-link\" style={{textDecoration:\"none\",color: `${color === \"black\" ? \"black\" : \"black\"}`}}>Logout</Link>\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                  </>):(<Link className=\"nav-link\" to=\"/login\" >\r\n                <div\r\n                  style={{\r\n                    color: `${color === \"black\" ? \"white\" : \"black\"}`,userSelect:\"none\"\r\n                  }}\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"20\"\r\n                    height=\"20\"\r\n                    fill=\"currentColor\"\r\n                    class=\"bi bi-person-fill\"\r\n                    viewBox=\"0 0 16 16\"\r\n                  >\r\n                    <path d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3Zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z\" />\r\n                  </svg>{\" \"}\r\n                  Login\r\n                </div>\r\n              </Link>)}\r\n                \r\n              </li>\r\n\r\n              <li className=\"nav-item pl-3\">\r\n                <Link \r\n                  className=\"nav-link\"\r\n                  to=\"/cart\"\r\n                  style={{ color: `${color === \"black\" ? \"white\" : \"black\"}` ,userSelect:\"none\"}}\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"20\"\r\n                    height=\"20\"\r\n                    fill={color === \"black\" ? \"white\" : \"black\"}\r\n                    className=\"bi bi-cart\"\r\n                    viewBox=\"0 0 16 16\"\r\n                  >\r\n                    <path d=\"M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .491.592l-1.5 8A.5.5 0 0 1 13 12H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5zM3.102 4l1.313 7h8.17l1.313-7H3.102zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm-7 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2zm7 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\" />\r\n                  </svg>{\" \"}\r\n                  Cart\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <Home\r\n              obj={restaurants}\r\n              align={align}\r\n              value={value}\r\n              color={color}\r\n              len={restaurants?.length}\r\n              loading={loading}\r\n              error={error}\r\n            />\r\n          }\r\n        />\r\n        <Route path=\"/Offer\" element={<Offer color={color} />} />\r\n        <Route path=\"/Help\" element={<Help color={color} />} />\r\n        <Route path=\"/restaurant/:id\" element={<Hotelmenu color={color} />} obj={restaurants?.content} />\r\n        <Route path=\"/cart\" element={<Cartscreen color={color} />} />\r\n        <Route path=\"/login\" element={<LoginScreen color={color} />}/>\r\n        <Route path=\"/register\" element={<Registerscreen color={color} />} />\r\n        <Route path=\"/shipping\" element={<Shippingscreen color={color} />} />\r\n        <Route path=\"/profile\" element={<Profilescreen color={color} />} />\r\n        <Route path=\"/payment\" element={<Paymentscreen color={color} />} />\r\n        <Route path=\"/placeorder\" element={<Placeorderscreen color={color} />} />\r\n        <Route path=\"/orders/:id\" element={<Orderscreen color={color}/>} />\r\n        <Route path=\"/order/:id\" element={<Detailscreen color={color}/>}/>\r\n        <Route path=\"*\" element={<Notfound404/>}/>\r\n      </Routes>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Hotel.jsx",["247","248","249","250","251"],[],"import React, { useEffect, useState } from 'react'\r\nimport '../styles/Hotel.css'\r\nimport setBodyColor from './setBodyColor'\r\nimport {Link} from \"react-router-dom\";\r\nimport Carosuel from './Carosuel';\r\nimport '../App.css'\r\nimport Loader from './Loader';\r\nimport Message from './Message';\r\n\r\nconst Hotel = (props) => {\r\n  let w=props.obj\r\n  const[k1,setk]=useState(w)\r\n  useEffect(()=>{\r\n    setk(w)\r\n  },[w])\r\n  function price() {\r\n    let newp = w.sort((a, b) => (a.price > b.price) ? 1 : (a.price < b.price) ? -1 : 0)\r\n    setk([...newp]);\r\n  }\r\n  function priceh() {\r\n    let newp1 = w.sort((a, b) => (a.price < b.price) ? 1 : (a.price > b.price) ? -1 : 0)\r\n    setk([...newp1]);\r\n  }\r\n  \r\n  function ratingh() {\r\n    let newk1 = w.sort((a, b) => (a.rating < b.rating) ? 1 : (a.rating > b.rating) ? -1 : 0)\r\n    setk([...newk1]);\r\n  }\r\n  function time() {\r\n    let newt = w.sort((a, b) => (a.time > b.time) ? 1 : (a.time < b.time) ? -1 : 0)\r\n    setk([...newt]);\r\n  }\r\n  setBodyColor({color:`${props.color}`})\r\n  return (<>{props.loading?<Loader/>:props.error?<Message>{props.error}</Message>:<>\r\n  <Carosuel color={props.color}></Carosuel> \r\n      <div>\r\n      <nav className=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n    <div className=\"container-fluid row\">\r\n      <a className=\"navbar-brand font-weight-bold pl-5 col-md-9 id1\" style={{color:`${props.color==='black'?'orange':'black'}`,userSelect:'none'}}>{props.len} Restaurants</a>\r\n      <div className=\"pl-5 dropdown col-md-2\">\r\n                    <button className={`btn btn-outline-${props.color==='black'?'warning':'dark'} dropdown-toggle dropdown profiledropdow`} type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"16\" fill=\"currentColor\" class=\"bi bi-filter\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M6 10.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5zm-2-3a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm-2-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5z\" />\r\n                    </svg> Filter</button><div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                        <a className=\"dropdown-item\" onClick={price} >Price:Low To High</a>\r\n                        <a className=\"dropdown-item\" onClick={priceh} >Price:High To Low</a>\r\n                        <a className=\"dropdown-item\" onClick={ratingh} >Rating:High To Low</a>\r\n                        <a className=\"dropdown-item\" onClick={time} >Time:Low To High</a>\r\n                        \r\n                    </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  <div className=\"row\">\r\n    <div className=\"container pt-2 pb-5\">\r\n    <div className=\"row\">\r\n    {k1 && k1.map((i)=>\r\n        {\r\n          return(<>\r\n        <Link className=\"col-lg mx-auto container justify-content-center p-3 hi \" to={`/restaurant/${i.id}`} align=\"center\" style={{textDecoration: \"none\",color:`${props.color==='black'?'white':'black'}`,pointerEvents:`${props.len===0?'none':\"\"}`}}>\r\n        <img src={i.path} alt=\"\" style={{width:'250px',height:'150px',borderRadius:'10px'}} /> \r\n        <h5 className=\"font-weight-bold pt-2\">{i.name}</h5>\r\n        <pre className=\"text-muted\" style={{fontSize:\"small\"}}>{i.description}</pre>\r\n          <div className=\"text-muted\" style={{fontSize:\"x-small\"}}>{props.value && <div className=\"col-lg\"><button  className=\"btn btn-success btn-sm\"><svg\r\n                xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-star-fill\"\r\n                viewBox=\"0 0 16 16\">\r\n                <path\r\n                  d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\">\r\n                </path>\r\n              </svg>{i.rating}</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{i.time} MINS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;₹{i.price} FOR TWO</div>}\r\n     \r\n\r\n        </div>\r\n      </Link>\r\n      </>)  \r\n        })\r\n    }\r\n    \r\n         \r\n    </div>\r\n    </div>\r\n    \r\n    </div>\r\n    \r\n    </div>\r\n   \r\n    <div className=\"row p-5 text-white\" style={{backgroundColor: \"black\",border:\"1px solid white\"}}>\r\n   \r\n    <div className=\"col-sm-3\">\r\n    \r\n      <b>Company</b><br/><br/>\r\n      <ul>\r\n        <li>About us</li>\r\n        <li>Team</li>\r\n        <li>Career</li>\r\n        <li>Swiggy Blog</li>\r\n        <li>Bug Bounty</li>\r\n        <li>Swiggy One</li>\r\n        <li>Swiggy Corporate</li>\r\n        <li>Swiggy Instamart</li>\r\n        <li>Swiggy Genie</li>\r\n      </ul>\r\n    </div>\r\n    <div className=\"col-sm-3\">\r\n      <b>Contact</b><br/><br/>\r\n      <ul>\r\n        <li>Help & Support</li>\r\n        <li>Partner with us</li>\r\n        <li>Ride with us</li>\r\n      </ul>\r\n    </div>\r\n    <div className=\"col-sm-3\">\r\n      <b>LEGAL</b><br/><br/>\r\n      <ul>\r\n        <li>Terms & Conditions</li>\r\n        <li>Refund & Cancellation</li>\r\n        <li>Privacy Policy</li>\r\n        <li>Cookie policy</li>\r\n        <li>Offer terms</li>\r\n        <li>Phishing & Fraud</li>\r\n        <li>Corporate - Swiggy Money Codes Terms and Conditions</li>\r\n        <li>Corporate - Swiggy Discount Voucher Terms and Conditions</li>\r\n      </ul>\r\n    </div>\r\n    <div className=\"col-sm-3 \">\r\n      <ul>\r\n        <li><img src=\"https://res.cloudinary.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,h_108/play_ip0jfp\"\r\n            class=\"p-3\" alt=\"\" width=\"50%\"/></li>\r\n        <li><img src=\"https://res.cloudinary.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,h_108/iOS_ajgrty\"\r\n            class=\"p-3\" alt=\"\" width=\"50%\"/></li>\r\n      </ul>\r\n    </div>\r\n  </div></>}\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Hotel","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Hotelmenu.jsx",["252","253","254","255","256"],[],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react'\r\nimport '../styles/Hotelmenu.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useState,useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport {  useParams } from 'react-router-dom';\r\nimport { listRestaurantsDetail } from '../actions/Restaurantactions'\r\nimport { addtocart } from '../actions/Cartactions'\r\nimport Loader from './Loader';\r\nimport Message from './Message';\r\nimport setBodyColor from './setBodyColor'\r\nfunction Hotelmenu(props) {\r\n    const dispatch=useDispatch();\r\n    const restaurantdetail=useSelector(state=>state.restaurantDetail)\r\n    const {error,loading,restaurant}=restaurantdetail\r\n    const {id}  = useParams();\r\n   \r\n     const [k,setk] = useState(props.obj)\r\n    const[e,sete]=useState(true)\r\n  useEffect(()=>{\r\n   dispatch(listRestaurantsDetail(id,\"\"))\r\n  },[dispatch])\r\n    const obj=[{'name':'No Item Found','img':'../pictures/no-item.jpg'}]\r\n  \r\n    \r\n\r\n    function addtocarthandler(rid,mid,qty)\r\n    {   \r\n        dispatch(addtocart(rid,mid,qty))\r\n        toast.success(\"ADDED TO CART.\",{autoClose:2000})\r\n    }\r\n    setBodyColor({color:`${props.color}`})\r\n    return (\r\n        <>\r\n{loading?<Loader/>:error?<Message>{error}</Message>:<>\r\n<div className={`bg-${props.color==='black'?'dark':'black'} row container-fluid`} id=\"div1\">\r\n                <div className=\"col-lg-4\" id=\"div3\">\r\n                     <img src={restaurant?.path}  className=\"img-thumbnail mx-auto d-block\" style={{ border: \"2px solid black\",height:\"165px\",width:\"264px\"}} alt=\"\" />\r\n                </div>\r\n                <div className=\"col-lg-4 text-white p-4\" style={{userSelect:'none'}}>\r\n                    <h1 className=\"text-white colortry font-weight-bold\" style={{fontSize:'xsmall'}}>{restaurant?.name}</h1>\r\n                    <h6 className=\"text-white colortry\">{restaurant?.description}</h6>\r\n                    <br />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4\"><button disabled=\"\" className=\"btn btn-success btn-sm text-white colortry\"><svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-star-fill\"\r\n                            viewBox=\"0 0 16 16\">\r\n                            <path\r\n                                d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\">\r\n                            </path>\r\n                        </svg> {restaurant?.rating}</button></div>\r\n                        <div className=\"col-3 text-white\" style={{ fontSize: \"small\" }}>\r\n                            <p className=\"colortry text-white\">{restaurant?.time} MINS</p>\r\n                        </div>\r\n                        <div className=\"col-5 text-white\" style={{ fontSize: \"small\" }}>\r\n                            <p className=\"colortry text-white\">₹{restaurant?.price}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-4 text-white p-4\" style={{userSelect:'none'}}>\r\n                    <fieldset className=\"border p-2 borderblack\">\r\n                        <legend className=\"text-warning w-auto colortry font-weight-bold\">OFFER</legend>\r\n                        <p className=\"colortry text-white\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                            fill=\"orange\" height=\"20px\" width=\"20px\" version=\"1.1\" id=\"Layer_1\" viewBox=\"0 0 512 512\"\r\n                            xmlSpace=\"preserve\">\r\n                            <g>\r\n                                <g>\r\n                                    <path\r\n                                        d=\"M177.595,155.193c-12.349,0-22.402,10.053-22.402,22.402c0,12.349,10.053,22.402,22.402,22.402    c12.349,0,22.402-10.053,22.402-22.402C199.996,165.246,189.944,155.193,177.595,155.193z\" />\r\n                                </g>\r\n                            </g>\r\n                            <g>\r\n                                <g>\r\n                                    <path\r\n                                        d=\"M334.406,312.005c-12.349,0-22.402,10.053-22.402,22.402c0,12.349,10.053,22.402,22.402,22.402    c12.349,0,22.402-10.053,22.402-22.402C356.808,322.057,346.755,312.005,334.406,312.005z\" />\r\n                                </g>\r\n                            </g>\r\n                            <g>\r\n                                <g>\r\n                                    <path\r\n                                        d=\"M491.153,256.001c13.617-14.953,19.283-35.681,14.427-56.967c-4.857-21.275-18.956-37.507-37.715-45.065    c5.786-19.383,1.882-40.516-11.726-57.579c-13.597-17.053-33.384-25.541-53.521-24.24c-3.205-19.962-15.883-37.321-35.539-46.794    c-19.645-9.451-41.128-8.575-58.749,1.389C296.79,10.151,277.833,0.011,256.011,0c-21.833,0-40.8,10.14-52.34,26.744    c-17.621-9.964-39.104-10.84-58.75-1.389c-19.656,9.473-32.333,26.832-35.539,46.794c-20.138-1.324-39.914,7.175-53.521,24.24    c-13.607,17.064-17.513,38.207-11.726,57.579c-18.759,7.57-32.859,23.791-37.715,45.065s0.81,42.014,14.428,56.966    C7.23,270.953,1.564,291.681,6.42,312.967c4.857,21.275,18.956,37.507,37.715,45.065c-5.786,19.383-1.882,40.516,11.726,57.579    c13.597,17.053,33.394,25.508,53.521,24.24c3.205,19.962,15.883,37.321,35.539,46.794c19.656,9.461,41.14,8.575,58.75-1.389    C215.212,501.86,234.178,512,256.012,512c21.821-0.011,40.778-10.151,52.318-26.744c17.611,9.954,39.093,10.84,58.75,1.389    c19.656-9.473,32.333-26.832,35.539-46.794c20.116,1.247,39.914-7.186,53.521-24.24c13.607-17.063,17.513-38.207,11.726-57.579    c18.759-7.57,32.859-23.791,37.715-45.065C510.438,291.692,504.771,270.953,491.153,256.001z M121.591,177.595    c0-30.878,25.126-56.004,56.004-56.004c30.878,0,56.004,25.126,56.004,56.004c0,30.878-25.126,56.004-56.004,56.004    C146.716,233.599,121.591,208.473,121.591,177.595z M189.473,346.285c-3.282,3.282-7.581,4.923-11.878,4.923    c-4.298,0-8.598-1.641-11.878-4.923c-6.563-6.563-6.563-17.195,0-23.758l156.812-156.812c6.563-6.563,17.195-6.563,23.758,0    c6.563,6.563,6.563,17.196,0,23.758L189.473,346.285z M334.406,390.411c-30.878,0-56.004-25.126-56.004-56.004    s25.126-56.004,56.004-56.004s56.004,25.126,56.004,56.004S365.285,390.411,334.406,390.411z\" />\r\n                                </g>\r\n                            </g>\r\n                        </svg> FREE DELIVERY</p>\r\n                        <p class=\"colortry text-white\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                            fill=\"orange\" height=\"20px\" width=\"20px\" version=\"1.1\" id=\"Layer_1\" viewBox=\"0 0 512 512\"\r\n                            xmlSpace=\"preserve\">\r\n                            <g>\r\n                                <g>\r\n                                    <path\r\n                                        d=\"M177.595,155.193c-12.349,0-22.402,10.053-22.402,22.402c0,12.349,10.053,22.402,22.402,22.402    c12.349,0,22.402-10.053,22.402-22.402C199.996,165.246,189.944,155.193,177.595,155.193z\" />\r\n                                </g>\r\n                            </g>\r\n                            <g>\r\n                                <g>\r\n                                    <path\r\n                                        d=\"M334.406,312.005c-12.349,0-22.402,10.053-22.402,22.402c0,12.349,10.053,22.402,22.402,22.402    c12.349,0,22.402-10.053,22.402-22.402C356.808,322.057,346.755,312.005,334.406,312.005z\" />\r\n                                </g>\r\n                            </g>\r\n                            <g>\r\n                                <g>\r\n                                    <path\r\n                                        d=\"M491.153,256.001c13.617-14.953,19.283-35.681,14.427-56.967c-4.857-21.275-18.956-37.507-37.715-45.065    c5.786-19.383,1.882-40.516-11.726-57.579c-13.597-17.053-33.384-25.541-53.521-24.24c-3.205-19.962-15.883-37.321-35.539-46.794    c-19.645-9.451-41.128-8.575-58.749,1.389C296.79,10.151,277.833,0.011,256.011,0c-21.833,0-40.8,10.14-52.34,26.744    c-17.621-9.964-39.104-10.84-58.75-1.389c-19.656,9.473-32.333,26.832-35.539,46.794c-20.138-1.324-39.914,7.175-53.521,24.24    c-13.607,17.064-17.513,38.207-11.726,57.579c-18.759,7.57-32.859,23.791-37.715,45.065s0.81,42.014,14.428,56.966    C7.23,270.953,1.564,291.681,6.42,312.967c4.857,21.275,18.956,37.507,37.715,45.065c-5.786,19.383-1.882,40.516,11.726,57.579    c13.597,17.053,33.394,25.508,53.521,24.24c3.205,19.962,15.883,37.321,35.539,46.794c19.656,9.461,41.14,8.575,58.75-1.389    C215.212,501.86,234.178,512,256.012,512c21.821-0.011,40.778-10.151,52.318-26.744c17.611,9.954,39.093,10.84,58.75,1.389    c19.656-9.473,32.333-26.832,35.539-46.794c20.116,1.247,39.914-7.186,53.521-24.24c13.607-17.063,17.513-38.207,11.726-57.579    c18.759-7.57,32.859-23.791,37.715-45.065C510.438,291.692,504.771,270.953,491.153,256.001z M121.591,177.595    c0-30.878,25.126-56.004,56.004-56.004c30.878,0,56.004,25.126,56.004,56.004c0,30.878-25.126,56.004-56.004,56.004    C146.716,233.599,121.591,208.473,121.591,177.595z M189.473,346.285c-3.282,3.282-7.581,4.923-11.878,4.923    c-4.298,0-8.598-1.641-11.878-4.923c-6.563-6.563-6.563-17.195,0-23.758l156.812-156.812c6.563-6.563,17.195-6.563,23.758,0    c6.563,6.563,6.563,17.196,0,23.758L189.473,346.285z M334.406,390.411c-30.878,0-56.004-25.126-56.004-56.004    s25.126-56.004,56.004-56.004s56.004,25.126,56.004,56.004S365.285,390.411,334.406,390.411z\" />\r\n                                </g>\r\n                            </g>\r\n                        </svg> 20% off up to ₹120 | Use FEDERALCC Above ₹249</p>\r\n                    </fieldset>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"divtoppicks\"  style={{ zIndex: \"-1\", paddingTop: \"23%\",color:`${props.color==='black'?'white':\"black\"}`}}>\r\n                {/* Second Col Start  */}\r\n                <div className='row'><div className=\"col-lg-7\"><h3 style={{ color: `${props.color==='black'?'orange':\"orange\"}`,userSelect:'none' }} className=\"pr-5\" align='center'>Top Picks\r\n                </h3></div>\r\n                <Link to=\"/cart\"><ToastContainer className=\"toastcontainer\" style={{width:\"300px\",height:\"8px\"}}/></Link>\r\n                \r\n            <div className='col-lg-3 pt-1'>\r\n            <form className=\"d-flex\" role=\"search\" autocomplete=\"off\" autocapitalize=\"Link-zA-Z0-9\">\r\n                <input className=\"form-control me-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" style={{width:\"50%\",height:\"80%\"}} onChange={(e)=>{dispatch(listRestaurantsDetail(id,e.target.value))}}\r\n            />\r\n                <button className=\"btn btn-outline-warning\" style={{height:\"32px\"}}><svg xmlns=\"http://www.w3.org/2000/svg\" style={{paddingBottom:\"6\",width:\"15px\"}} \r\n                    fill=\"currentColor\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n                    <path\r\n                      d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\r\n                  </svg></button>\r\n              </form>\r\n            </div></div>\r\n            <div className=\"row justify-content-center\">\r\n                \r\n                {restaurant.content && restaurant.content.map((m) => {\r\n                return (<><div className=\"col-lg-7 text-left\" style={{userSelect:'none'}} >\r\n                    <div data-target=\"#navbar-example3\" data-offset=\"0\">\r\n\r\n                    </div>\r\n                    <hr style={{border:`1px solid ${props.color==='black'?'white':'black'}`}}/>\r\n                    <p>\r\n                        <div className=\"row text-left container\">\r\n                            <div className=\"col-6\">\r\n                                {/* <b>Bestseller</b> */}\r\n                                <h4>{m.name}</h4>\r\n                                {e && <p>₹{m.price}</p>}<br/>\r\n                                <p>{m.description}</p>\r\n                                \r\n                                { <button onClick={()=>{addtocarthandler(`${m.restaurant}`,`${m.id}`,`${m.quantity}`)}} className={`btn btn-${props.color==='black'?'warning':'warning'} add-to-cart`}>Add to Cart</button>\r\n                            }</div>\r\n                            <div className=\"col-6 text-right p-4\"><img class=\"imgsize\"\r\n                                src={m.img}\r\n                                style={{ borderRadius: \"15px\" }} width=\"45%\" alt=\"\" /></div>\r\n                        </div>\r\n                    </p>\r\n                </div></>)\r\n            })}\r\n        </div>\r\n        </div>\r\n\r\n            {/* Second Col End */ }\r\n</>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Hotelmenu;","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/LoginScreen.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Cartscreen.jsx",["257","258","259","260","261"],[],"import React,{useEffect} from 'react'\r\nimport setBodyColor from './setBodyColor'\r\nimport { Link,useParams,useLocation,useNavigate, Navigate } from 'react-router-dom'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport {Row,Col,ListGroup,Image,Form,Button,Card,} from 'react-bootstrap'\r\nimport { addtocart,removefromcart } from '../actions/Cartactions'\r\nimport Messagecart from './Messagecart'\r\nfunction Cartscreen(props) {\r\n  setBodyColor({color: `${props.color}`})\r\nconst dispatch=useDispatch()\r\nconst cart=useSelector(state=>state.cart)\r\nconst {cartItems}=cart\r\nconst userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\nfunction minus(item,id,rid)\r\n{\r\n  if(item<=0)\r\n  {\r\n    dispatch(removefromcart(id))\r\n  }\r\n  else\r\n  {\r\n    dispatch(addtocart(rid,id,item))\r\n  }\r\n}\r\nconst removefromcarthandler=(id)=>{\r\n  dispatch(removefromcart(id))\r\n}\r\nconst navigate=useNavigate()\r\nfunction placeorderhandler()\r\n  {\r\n    if(userInfo)\r\n    {\r\n      navigate('/shipping')\r\n    }\r\n    else{\r\n      navigate('/login')\r\n    }\r\n    \r\n  }\r\n  \r\n  return (\r\n    <div >\r\n    <Row>\r\n      <Col className=\"container-fluid\" md={8}>\r\n        <p className=\"display-5\" style={{paddingTop:\"100px\",fontSize:\"xx-large\",color:\"orange\",userSelect:'none'}} align=\"center\">\r\n          SHOPPING CART\r\n          </p>\r\n          {cartItems.length===0?<><Messagecart></Messagecart></>:\r\n          <ListGroup variant=\"primary\" style={{border:`2px solid ${props.color==='black'?'white':'black'}`}} >\r\n            {\r\n              cartItems.map(item=>\r\n                <ListGroup.Item key={item.id} style={{backgroundColor:`${props.color}`}}>\r\n                  <Row>\r\n                    <Col md={2}>\r\n                      <Image src={item.image} alt={item.name} fluid rounded/>\r\n                    </Col>\r\n                    <Col md={3} style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>{item.name}</Col>\r\n                    <Col md={2} style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>₹{item.price}</Col>\r\n                    <Col md={4} className=\"d-flex\">\r\n                      <Form.Control as=\"button\" onClick={()=>{minus(item.quantity-1,item.id,item.restaurantid)}} className=\" btn btn-warning p-1\" style={{width:\"10%\"}}>&#8722;</Form.Control>\r\n                      <Form.Control as=\"text\" value={item.quantity} style={{width:\"10%\"}} className='p-1 border-warning'><span>{item.quantity}</span></Form.Control>\r\n                      <Form.Control as=\"button\" onClick={()=>{dispatch(addtocart(item.restaurantid,item.id,item.quantity+1))}} className=\"btn btn-warning p-1\" style={{width:\"10%\"}}>&#43;</Form.Control>\r\n                    </Col>\r\n                    <Col md={1}><Button type=\"button\" variant=\"light\" onClick={()=>removefromcarthandler(item.id)}><svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"25\" height=\"25\" viewBox=\"0 0 30 30\" fill=\"orange\">\r\n<path d=\"M 13 3 A 1.0001 1.0001 0 0 0 11.986328 4 L 6 4 A 1.0001 1.0001 0 1 0 6 6 L 24 6 A 1.0001 1.0001 0 1 0 24 4 L 18.013672 4 A 1.0001 1.0001 0 0 0 17 3 L 13 3 z M 6 8 L 6 24 C 6 25.105 6.895 26 8 26 L 22 26 C 23.105 26 24 25.105 24 24 L 24 8 L 6 8 z\"></path>\r\n</svg></Button></Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                )\r\n            }\r\n            </ListGroup>}\r\n          </Col>\r\n    <Col md={3} style={{paddingTop:\"164px\"}}>\r\n      <Card style={{width:\"90%\"}}>\r\n        <ListGroup variant=\"flush\" style={{border:`2px solid ${props.color==='black'?'white':'black'}`}}>\r\n          <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n            <h2 style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>SUBTOTAL ({cartItems.reduce((acc,item)=>acc+item.quantity,0)} ITEMS)</h2>\r\n            <h4><strong style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>₹{cartItems.reduce((acc,item)=>acc+item.quantity*item.price,0)}</strong></h4>\r\n          </ListGroup.Item>\r\n          <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n            <Button type=\"button\" className='btn-block btn-warning' disabled={cartItems.length===0} onClick={placeorderhandler}>PLACE ORDER</Button>\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </Card>\r\n    </Col>\r\n    </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cartscreen","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Registerscreen.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Profilescreen.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Shippingscreen.jsx",["262"],[],"import React from 'react'\r\nimport  { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveShippingAddress } from '../actions/Cartactions'\r\nimport { useRef } from \"react\";\r\nimport {Form,Row,Col,Container,Button} from 'react-bootstrap'\r\nimport { StandaloneSearchBox, useJsApiLoader } from \"@react-google-maps/api\";\r\nimport Checkoutsteps from './Checkoutsteps'\r\nimport setBodyColor from './setBodyColor'\r\nconst libraries = ['places'];\r\nfunction Shippingscreen(props) {\r\n    setBodyColor({color:`${props.color}`})\r\n  const cart = useSelector(state => state.cart)\r\n  const { shippingAddress } = cart\r\n  const navigate=useNavigate()\r\n  const dispatch = useDispatch()\r\n\r\n  const [street, setStreet] = useState(shippingAddress.street)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [state, setState] = useState(shippingAddress.state)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n\r\n  const submitHandler = (e) => {\r\n      e.preventDefault()\r\n      dispatch(saveShippingAddress({ street, city, postalCode, state }))\r\n      navigate('/payment')\r\n  }\r\n\r\n\r\n  const inputRef = useRef();\r\n\r\n    const { isLoaded, loadError } = useJsApiLoader({googleMapsApiKey: process.env.AIzaSyD3GG7Qq1XgRMAcjPejT9spgnR4RZ9xzbU,libraries});\r\n\r\n    const handlePlaceChanged = () => { \r\n        const [ place ] = inputRef.current.getPlaces();\r\n        if(place) { \r\n              \r\n            let list=place.formatted_address.split(',')\r\n            let statepincodelist=list[list.length-2].split(' ')\r\n            let streetplace=list.slice(0,list.length-3)\r\n            setStreet(streetplace)\r\n            setState(statepincodelist[1])\r\n            setPostalCode(statepincodelist[2])\r\n            setCity(list[list.length-3])\r\n        }\r\n    }\r\nfunction nullset(e)\r\n{\r\n            setStreet('')\r\n            setState('')\r\n            setPostalCode('')\r\n            setCity('')\r\n}\r\n  return (\r\n\r\n      <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6} style={{paddingTop:\"10%\"}}>\r\n                <Checkoutsteps step1={\"hi\"} color={props.color}/>\r\n          <h1 style={{color:\"orange\",userSelect:\"none\"}}>Delivery Address</h1>\r\n          \r\n          <Form onSubmit={submitHandler}>\r\n\r\n          {isLoaded\r\n        &&\r\n        <StandaloneSearchBox onLoad={ref => inputRef.current = ref} onPlacesChanged={handlePlaceChanged}>\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search Here..\"\r\n                onChange={(e)=>{if(e.target.value===''){nullset()}}}\r\n            />\r\n        </StandaloneSearchBox>}\r\n\r\n              <Form.Group controlId='street' className='pt-3'>\r\n                  <Form.Label style={{color:`${props.color==='black'?'white':'black'}`,userSelect:\"none\"}}>Street</Form.Label>\r\n                  <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter street'\r\n                      value={street ? street : ''}\r\n                      onChange={(e) => setStreet(e.target.value)}\r\n                  >\r\n                  </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='city' className='pt-3'>\r\n                  <Form.Label style={{color:`${props.color==='black'?'white':'black'}`,userSelect:\"none\"}}>City</Form.Label>\r\n                  <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter city'\r\n                      value={city ? city : ''}\r\n                      onChange={(e) => setCity(e.target.value)}\r\n                  >\r\n                  </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='state' className='pt-3'>\r\n                  <Form.Label style={{color:`${props.color==='black'?'white':'black'}`,userSelect:\"none\"}}>State</Form.Label>\r\n                  <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter state'\r\n                      value={state ? state : ''}\r\n                      onChange={(e) => setState(e.target.value)}\r\n              ></Form.Control>\r\n                </Form.Group>\r\n              \r\n              <Form.Group controlId='postalCode' className='pt-3 pb-3'>\r\n                  <Form.Label style={{color:`${props.color==='black'?'white':'black'}`,userSelect:\"none\"}}>Postal Code</Form.Label>\r\n                  <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter postal code'\r\n                      value={postalCode ? postalCode : ''}\r\n                      onChange={(e) => setPostalCode(e.target.value)}\r\n                  >\r\n                  </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Button type='submit' variant='primary' className='btn btn-warning'>\r\n                  Continue\r\n              </Button>\r\n          </Form>\r\n          </Col>\r\n            </Row>\r\n        </Container>\r\n  )\r\n}\r\n\r\nexport default Shippingscreen","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Placeorderscreen.jsx",["263"],[],"import React, {  useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport {  useNavigate } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './Message'\r\nimport Checkoutsteps from './Checkoutsteps'\r\nimport { createOrder } from '../actions/Orderactions'\r\nimport { ORDER_CREATE_RESET } from '../constants/Orderconstants'\r\nimport setBodyColor from './setBodyColor'\r\nfunction Placeorderscreen(props) {\r\n    setBodyColor({color:`${props.color}`})\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n    const navigate=useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice =cart.cartItems.reduce((acc, item) => acc + item.price *item.quantity, 0).toFixed(2)\r\n    cart.shippingPrice = Number(cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        navigate('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            navigate(`/orders/${order.id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success,navigate,dispatch])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div style={{paddingTop:\"10%\"}}>\r\n            <Checkoutsteps step1={\"hi\"} step2={\"hi\"} step3={\"hi\"} color={props.color}/>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\" style={{border:`2px solid ${props.color==='black'?'white':'black'}`}}>\r\n                        <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                            <h2 style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>Delivery Address</h2>\r\n\r\n                            <p style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>\r\n                                {cart.shippingAddress.street},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.state},\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                            <h2 style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>Payment</h2>\r\n                            <p style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>\r\n                                <strong >Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                            <h2 style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info' style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant=\"flush\" >\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index} style={{backgroundColor:`${props.color}`}}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>\r\n                                                        {item.name}\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4} style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>\r\n                                                        {item.quantity} X ₹{item.price} = ₹{(item.quantity * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4} >\r\n                    <Card >\r\n                        <ListGroup variant='flush' style={{border:`2px solid ${props.color==='black'?'white':'black'}`}}>\r\n                            <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                                <h2 style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                                <Row style={{color:`${props.color==='black'?'white':'black'}`}}>\r\n                                    <Col style={{userSelect:'none'}}>SubTotal:</Col>\r\n                                    <Col style={{userSelect:'none'}}>₹{cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                                <Row style={{color:`${props.color==='black'?'white':'black'}`}}>\r\n                                    <Col style={{userSelect:'none'}}>Shipping:</Col>\r\n                                    <Col style={{userSelect:'none'}}>₹{cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                                <Row style={{color:`${props.color==='black'?'white':'black'}`}}>\r\n                                    <Col style={{userSelect:'none'}}>Tax:</Col>\r\n                                    <Col style={{userSelect:'none'}}>₹{cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                                <Row >\r\n                                    <Col><h2 style={{userSelect:'none',color:`${props.color==='black'?'white':'black'}`}}><b>Total:</b></h2></Col>\r\n                                    <Col><h2 style={{userSelect:'none',color:`${props.color==='black'?'white':'black'}`}}><b>₹{cart.totalPrice}</b></h2></Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block btn-warning'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Placeorderscreen","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Paymentscreen.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Orderscreen.jsx",["264","265"],[],"//sb-5mjyk27287097@personal.example.com\r\n//foodorder\r\nimport emailjs from 'emailjs-com';\r\nimport React, { useState, useEffect } from 'react'\r\nimport {  Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useParams,useNavigate } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Messageorderscreen from './Messageorderscreen'\r\nimport Loader from './Loader'\r\nimport { getOrderDetails,payOrder } from '../actions/Orderactions'\r\nimport { ORDER_PAY_RESET } from '../constants/Orderconstants'\r\nimport setBodyColor from './setBodyColor'\r\nfunction Orderscreen(props) {\r\n    \r\n    setBodyColor({color:`${props.color}`})\r\n    const {id} = useParams()\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate=useNavigate()\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n    const [toEmail, setToEmail] = useState('');\r\n    const [subject, setSubject] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n    const cart = useSelector(state => state.cart)\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n  \r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.quantity, 0).toFixed(2)\r\n    }\r\n   \r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AfRHaP6G8Cf10KYGTuCopdPbCg1F8aiBAS040dgvTDzAaBPyART33IsvUT95ABM0Jev9fb80n8tRWnO_'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n    let subjectcontent=`HI ${order?.user.name.toUpperCase()} YOUR ORDER IS SUCCESSFULLY PLACED!!`\r\n    let messagecontent=\"\"\r\n    messagecontent+=\"YOUR ORDER DETAILS:\"+\"\\n\"\r\n    const sendmessage=async ()=>{order && \r\n        order.orderItems.map((i)=>{\r\n \r\n            messagecontent=messagecontent+i.name.toString()+\"\\n\";\r\n            \r\n            return messagecontent;}\r\n            )}\r\n            sendmessage()\r\n           \r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            navigate('/login')\r\n        }\r\n\r\n        if (!order  ||successPay|| order.id !== parseInt(id) ) \r\n        {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n         \r\n            dispatch(getOrderDetails(id))\r\n\r\n        }\r\n         else if (!order.isPaid) {\r\n            \r\n         \r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n                \r\n            } else {\r\n                setSdkReady(true)\r\n\r\n            }\r\n        }\r\n        messagecontent+=\"TOTAL PRICE: ₹\"+order?.totalPrice+\"\\n\";\r\n        setToEmail(order?.user.email)\r\n                setSubject(subjectcontent)\r\n                setMessage(messagecontent)\r\n    }, [dispatch, order,id,successPay,navigate,userInfo])\r\n\r\n   \r\n    \r\n    const serviceId = 'service_kq6lmog';\r\n    const templateId = 'template_rdbps0e';\r\n    const userId = 'ymzK1ppAZ5y8KoLpp';\r\n    const emailParams = {\r\n        to_email: toEmail,\r\n        subject: subject,\r\n        message: message,\r\n        to_name:`${order?.user.name}`,\r\n      };\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(id, paymentResult))\r\n        emailjs.send(serviceId, templateId, emailParams, userId)\r\n      .then((response) => {\r\n        console.log('Email sent successfully:', response);\r\n        messagecontent=\"\";\r\n      })\r\n      .catch((error) => {\r\n        console.error('Email sending failed:', error);\r\n      });\r\n      setMessage('')\r\n        setSubject('')\r\n        setToEmail('')\r\n    }\r\n   \r\n    \r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Messageorderscreen var='danger' message={error}></Messageorderscreen>\r\n    ) : (\r\n                <div style={{paddingTop:\"5%\"}}>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush' style={{border:`2px solid ${props.color==='black'?'white':'black'}`}}>\r\n                                <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                                    <h2 style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>Delivery Address</h2>\r\n                                    <p style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}><strong>Email: </strong>{order.user.email}</p>\r\n                                    <p style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>\r\n                                        <strong>Shipping: </strong>\r\n                                        {cart.shippingAddress.street},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.state},\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Messageorderscreen var='success' message={\"Delivered on\"} delivered={order.deliveredAt.toString().slice(0,10).split(\"-\").reverse().join(\"-\")}></Messageorderscreen>\r\n                                    ) : (\r\n                                            <Messageorderscreen var='danger' message={\"Not Delivered\"}></Messageorderscreen>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                                    <h2 style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>Payment</h2>\r\n                                    <p style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Messageorderscreen var='success' message={\"Paid on \"} paid={order.paidAt.toString().slice(0,10).split(\"-\").reverse().join(\"-\")}></Messageorderscreen>\r\n                                    ) : (\r\n                                            <Messageorderscreen var='danger' message={\"Not Paid\"}></Messageorderscreen>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                                    <h2 style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Messageorderscreen var='info' message={\"Order is empty\"}>\r\n                                        \r\n                            </Messageorderscreen> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index} style={{backgroundColor:`${props.color}`}}>\r\n                                                        <Row style={{color:`${props.color==='black'?'white':'black'}`}}>\r\n                                                            <Col md={1} >\r\n                                                                <Image src={item.img} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col style={{userSelect:'none'}}>\r\n                                                                {item.name}\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4} style={{userSelect:'none'}}>\r\n                                                                {item.quantity} X ₹{item.price} = ₹{(item.quantity * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush' style={{border:`2px solid ${props.color==='black'?'white':'black'}`}}>\r\n                                    <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                                        <h2 style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                                        <Row style={{color:`${props.color==='black'?'white':'black'}`}}>\r\n                                            <Col style={{userSelect:'none'}}>Items:</Col>\r\n                                            <Col style={{userSelect:'none'}}>₹{order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                                        <Row style={{color:`${props.color==='black'?'white':'black'}`}}>\r\n                                            <Col style={{userSelect:'none'}}>Shipping:</Col>\r\n                                            <Col style={{userSelect:'none'}}>₹{order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                                        <Row style={{color:`${props.color==='black'?'white':'black'}`}}>\r\n                                            <Col style={{userSelect:'none'}}>Tax:</Col>\r\n                                            <Col style={{userSelect:'none'}}>₹{order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                                        <Row style={{color:`${props.color==='black'?'white':'black'}`}}>\r\n                                            <Col style={{userSelect:'none'}}>Total:</Col>\r\n                                            <Col style={{userSelect:'none'}}>₹{order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                order.orderItems.length === 0?\"\":<PayPalButton\r\n                                                amount={order.totalPrice}\r\n                                                onSuccess={successPaymentHandler}/>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                               \r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default Orderscreen","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Detailscreen.jsx",["266","267","268","269"],[],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link,useParams,useNavigate } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrderDetails } from '../actions/Orderactions'\r\nimport setBodyColor from './setBodyColor'\r\nimport Loader from './Loader'\r\nimport Messageorderscreen from './Messageorderscreen'\r\n\r\nfunction Detailscreen(props) {\r\n    setBodyColor({color:`${props.color}`})\r\n    const {id} = useParams()\r\n    const dispatch = useDispatch()\r\n    const navigate=useNavigate()\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n    const cart = useSelector(state => state.cart)\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            navigate('/login')\r\n        }\r\n\r\n        if(!order){\r\n            dispatch(getOrderDetails(id))\r\n        }\r\n    }, [dispatch,order,id,navigate,userInfo])\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Messageorderscreen var='danger' message={error}></Messageorderscreen>\r\n    ) : (\r\n    <div style={{paddingTop:\"5%\"}}  >\r\n                    <Row className=' justify-content-center'>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush' style={{border:`2px solid ${props.color==='black'?'white':'black'}`}}>\r\n                                <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                                    <h2 style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>Delivery Address</h2>\r\n                                    <p style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}><strong>Name: </strong> {order && order.user.name}</p>\r\n                                    <p style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}><strong>Email: </strong>{order && order.user.email}</p>\r\n                                    <p style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>\r\n                                        <strong>Shipping: </strong>\r\n                                        {cart.shippingAddress.street},  {order && order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order && order.shippingAddress.state},\r\n                                        {'  '}\r\n                                        {order && order.shippingAddress.postalCode}\r\n                                    </p>\r\n\r\n                                    {order && order.isDelivered ? (\r\n                                        <Messageorderscreen var='success' message={\"Delivered on\"} delivered={order && order.deliveredAt}></Messageorderscreen>\r\n                                    ) : (\r\n                                            <Messageorderscreen var='danger' message={\"Not Delivered\"}></Messageorderscreen>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                                    <h2 style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>Payment</h2>\r\n                                    <p style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>\r\n                                        <strong>Method: </strong>\r\n                                        {order && order.paymentMethod}\r\n                                    </p>\r\n                                    {order && order.isPaid ? (\r\n                                        <Messageorderscreen var='success' message={\"Paid on \"} paid={order && order.paidAt.toString().slice(0,10).split(\"-\").reverse().join(\"-\")}></Messageorderscreen>\r\n                                    ) : (\r\n                                            <Messageorderscreen var='danger' message={\"Not Paid\"}></Messageorderscreen>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item style={{backgroundColor:`${props.color}`}}>\r\n                                    <h2 style={{color:`${props.color==='black'?'white':'black'}`,userSelect:'none'}}>Order Items</h2>\r\n                                    {order && order.orderItems.length === 0 ? <Messageorderscreen var='info' message={\"Order is empty\"}>\r\n                                        \r\n                            </Messageorderscreen> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order && order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index} style={{backgroundColor:`${props.color}`}}>\r\n                                                        <Row style={{color:`${props.color==='black'?'white':'black'}`}}>\r\n                                                            <Col md={1} >\r\n                                                                <Image src={item.img} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col style={{userSelect:'none'}}>\r\n                                                                {item.name}\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4} style={{userSelect:'none'}}>\r\n                                                                {item.quantity} X ₹{item.price} = ₹{(item.quantity * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n                        </Row>\r\n                        </div>\r\n  )\r\n}\r\n\r\nexport default Detailscreen","/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Loader.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Carosuel.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/setBodyColor.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Message.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Messageloginscreen.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Messagecart.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Messageprofilescreen.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Messageregisterscreen.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Checkoutsteps.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Messageorderscreen.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/constants/Userconstants.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/chatbot.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Offer.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Help.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Chatbot.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/reducers/Restaurantreducers.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/constants/Restaurantconstants.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/constants/Orderconstants.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/constants/Cartconstants.jsx",[],[],"/Users/vraj/Desktop/PROJECT GROUP/frontend/src/components/Notfound404.jsx",["270"],[],"import React from 'react'\nimport Notfoundimage from '../images/404.png'\nimport { Link } from 'react-router-dom'\nfunction Notfound404() {\n  return (\n    <div className='container d-block mx-auto justify-content-center' style={{paddingTop:\"7%\"}}><img className='d-block mx-auto justify-content-center' src={Notfoundimage} alt=\"404 NOT FOUND IMAGE\" />\n    <Link to=\"/\" className='btn btn-light d-block mx-auto justify-content-center'>CLICK HERE TO GO TO HOMEPAGE</Link></div>\n  )\n}\n\nexport default Notfound404",{"ruleId":"271","severity":1,"message":"272","line":13,"column":21,"nodeType":"273","messageId":"274","endLine":13,"endColumn":23},{"ruleId":"271","severity":1,"message":"272","line":47,"column":21,"nodeType":"273","messageId":"274","endLine":47,"endColumn":23},{"ruleId":"271","severity":1,"message":"275","line":52,"column":50,"nodeType":"273","messageId":"274","endLine":52,"endColumn":52},{"ruleId":"276","severity":1,"message":"277","line":16,"column":5,"nodeType":"278","messageId":"279","endLine":16,"endColumn":30},{"ruleId":"271","severity":1,"message":"272","line":9,"column":12,"nodeType":"273","messageId":"274","endLine":9,"endColumn":14},{"ruleId":"276","severity":1,"message":"280","line":14,"column":5,"nodeType":"278","messageId":"279","endLine":14,"endColumn":20},{"ruleId":"276","severity":1,"message":"281","line":19,"column":5,"nodeType":"278","messageId":"279","endLine":19,"endColumn":24},{"ruleId":"276","severity":1,"message":"282","line":21,"column":5,"nodeType":"278","messageId":"279","endLine":21,"endColumn":23},{"ruleId":"276","severity":1,"message":"283","line":22,"column":5,"nodeType":"278","messageId":"279","endLine":22,"endColumn":23},{"ruleId":"276","severity":1,"message":"284","line":23,"column":5,"nodeType":"278","messageId":"279","endLine":23,"endColumn":20},{"ruleId":"276","severity":1,"message":"285","line":25,"column":5,"nodeType":"278","messageId":"279","endLine":25,"endColumn":26},{"ruleId":"276","severity":1,"message":"286","line":26,"column":5,"nodeType":"278","messageId":"279","endLine":26,"endColumn":26},{"ruleId":"276","severity":1,"message":"287","line":27,"column":5,"nodeType":"278","messageId":"279","endLine":27,"endColumn":23},{"ruleId":"276","severity":1,"message":"288","line":28,"column":5,"nodeType":"278","messageId":"279","endLine":28,"endColumn":24},{"ruleId":"276","severity":1,"message":"289","line":38,"column":17,"nodeType":"278","messageId":"279","endLine":38,"endColumn":25},{"ruleId":"276","severity":1,"message":"290","line":39,"column":17,"nodeType":"278","messageId":"279","endLine":39,"endColumn":25},{"ruleId":"276","severity":1,"message":"291","line":42,"column":10,"nodeType":"278","messageId":"279","endLine":42,"endColumn":11},{"ruleId":"292","severity":1,"message":"293","line":39,"column":7,"nodeType":"294","endLine":39,"endColumn":148},{"ruleId":"292","severity":1,"message":"293","line":44,"column":25,"nodeType":"294","endLine":44,"endColumn":71},{"ruleId":"292","severity":1,"message":"293","line":45,"column":25,"nodeType":"294","endLine":45,"endColumn":72},{"ruleId":"292","severity":1,"message":"293","line":46,"column":25,"nodeType":"294","endLine":46,"endColumn":73},{"ruleId":"292","severity":1,"message":"293","line":47,"column":25,"nodeType":"294","endLine":47,"endColumn":70},{"ruleId":"276","severity":1,"message":"295","line":21,"column":13,"nodeType":"278","messageId":"279","endLine":21,"endColumn":14},{"ruleId":"276","severity":1,"message":"296","line":21,"column":15,"nodeType":"278","messageId":"279","endLine":21,"endColumn":19},{"ruleId":"276","severity":1,"message":"297","line":22,"column":13,"nodeType":"278","messageId":"279","endLine":22,"endColumn":17},{"ruleId":"298","severity":1,"message":"299","line":25,"column":5,"nodeType":"300","endLine":25,"endColumn":15,"suggestions":"301"},{"ruleId":"276","severity":1,"message":"302","line":26,"column":11,"nodeType":"278","messageId":"279","endLine":26,"endColumn":14},{"ruleId":"276","severity":1,"message":"303","line":1,"column":15,"nodeType":"278","messageId":"279","endLine":1,"endColumn":24},{"ruleId":"276","severity":1,"message":"304","line":3,"column":10,"nodeType":"278","messageId":"279","endLine":3,"endColumn":14},{"ruleId":"276","severity":1,"message":"305","line":3,"column":15,"nodeType":"278","messageId":"279","endLine":3,"endColumn":24},{"ruleId":"276","severity":1,"message":"306","line":3,"column":25,"nodeType":"278","messageId":"279","endLine":3,"endColumn":36},{"ruleId":"276","severity":1,"message":"307","line":3,"column":50,"nodeType":"278","messageId":"279","endLine":3,"endColumn":58},{"ruleId":"276","severity":1,"message":"308","line":33,"column":23,"nodeType":"278","messageId":"279","endLine":33,"endColumn":32},{"ruleId":"298","severity":1,"message":"309","line":35,"column":8,"nodeType":"300","endLine":35,"endColumn":35,"suggestions":"310"},{"ruleId":"311","severity":1,"message":"312","line":54,"column":42,"nodeType":"273","messageId":"313","endLine":54,"endColumn":43},{"ruleId":"298","severity":1,"message":"314","line":88,"column":25,"nodeType":"273","endLine":88,"endColumn":64},{"ruleId":"276","severity":1,"message":"315","line":1,"column":17,"nodeType":"278","messageId":"279","endLine":1,"endColumn":25},{"ruleId":"276","severity":1,"message":"316","line":2,"column":10,"nodeType":"278","messageId":"279","endLine":2,"endColumn":16},{"ruleId":"276","severity":1,"message":"317","line":2,"column":46,"nodeType":"278","messageId":"279","endLine":2,"endColumn":50},{"ruleId":"276","severity":1,"message":"304","line":3,"column":10,"nodeType":"278","messageId":"279","endLine":3,"endColumn":14},{"ruleId":"318","severity":1,"message":"319","line":6,"column":97,"nodeType":"294","endLine":6,"endColumn":201},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'USER_UPDATE_PROFILE_RESET' is defined but never used.","Identifier","unusedVar","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_LIST_REQUEST' is defined but never used.","'ORDER_LIST_SUCCESS' is defined but never used.","'ORDER_LIST_FAIL' is defined but never used.","'ORDER_DELIVER_REQUEST' is defined but never used.","'ORDER_DELIVER_SUCCESS' is defined but never used.","'ORDER_DELIVER_FAIL' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'setvalue' is assigned a value but never used.","'setalign' is assigned a value but never used.","'e' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'k' is assigned a value but never used.","'setk' is assigned a value but never used.","'sete' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["320"],"'obj' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'useParams' is defined but never used.","'useLocation' is defined but never used.","'Navigate' is defined but never used.","'loadError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'order.id'. Either include it or remove the dependency array.",["321"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","Assignments to the 'messagecontent' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'useState' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},"Update the dependencies array to be: [dispatch, id]",{"range":"326","text":"327"},"Update the dependencies array to be: [success, navigate, dispatch, order.id]",{"range":"328","text":"329"},[1004,1014],"[dispatch, id]",[1387,1414],"[success, navigate, dispatch, order.id]"]