{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET } from '../constant/Userconstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.response\n    });\n  }\n};\nexport const register = (name, email, password) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/users/register/`, {\n      'name': name,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.response\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: USER_LOGOUT\n  });\n  localStorage.removeItem('userInfo');\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.response\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/profile/update/', user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.response\n    });\n  }\n};","map":{"version":3,"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","register","name","getState","logout","removeItem","getUserDetails","id","userLogin","userInfo","Authorization","token","updateUserProfile","user"],"sources":["D:/PROJECT DJANGO/frontend/src/actions/Useractions.js"],"sourcesContent":["import axios from 'axios'\r\nimport { USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET, } from '../constant/Userconstants'\r\n\r\nexport const login=(email,password)=>async(dispatch)=>{\r\n    try{\r\n        dispatch({\r\n            type:USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config={\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n        const{data}=await axios.post('/api/users/login/',\r\n        {'username':email,'password':password},config)\r\n\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type:USER_LOGIN_FAIL,\r\n            payload:error.response && error.response.data.detail?error.response.data.detail:error.response\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const register=(name,email,password)=>async(dispatch,getState)=>{\r\n    try{\r\n        dispatch({\r\n            type:USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config={\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n        const{data}=await axios.post(`/api/users/register/`,{ 'name': name, 'email': email, 'password': password },config)\r\n\r\n        dispatch({\r\n            type:USER_REGISTER_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type:USER_REGISTER_FAIL,\r\n            payload:error.response && error.response.data.detail?error.response.data.detail:error.response\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout=()=>(dispatch)=>{\r\n    dispatch({type:USER_LOGOUT})\r\n    localStorage.removeItem('userInfo')\r\n}\r\n\r\nexport const getUserDetails=(id)=>async(dispatch,getState)=>{\r\n    try{\r\n        dispatch({\r\n            type:USER_DETAILS_REQUEST\r\n        })\r\n        const{userLogin:{userInfo},}=getState()\r\n        const config={\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const{data}=await axios.post(`/api/users/${id}`,config)\r\n\r\n        dispatch({\r\n            type:USER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type:USER_DETAILS_FAIL,\r\n            payload:error.response && error.response.data.detail?error.response.data.detail:error.response\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile=(user)=>async(dispatch,getState)=>{\r\n    try{\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n        const{userLogin:{userInfo},}=getState()\r\n        const config={\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const{data}=await axios.post('/api/users/profile/update/',user,config)\r\n\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }catch(error){\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_FAIL,\r\n            payload:error.response && error.response.data.detail?error.response.data.detail:error.response\r\n        })\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}