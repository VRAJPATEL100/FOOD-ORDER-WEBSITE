{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECT DJANGO\\\\frontend\\\\src\\\\component\\\\Shippingscreen.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Shippingscreen() {\n  _s();\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const dispatch = useDispatch();\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({\n      address,\n      city,\n      postalCode,\n      country\n    }));\n    history.push('/payment');\n  };\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shipping\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"address\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter address\",\n          value: address ? address : '',\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"city\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter city\",\n          value: city ? city : '',\n          onChange: e => setCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"postalCode\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Postal Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter postal code\",\n          value: postalCode ? postalCode : '',\n          onChange: e => setPostalCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"country\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          placeholder: \"Enter country\",\n          value: country ? country : '',\n          onChange: e => setCountry(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n}\n_s(Shippingscreen, \"kx9b8bkPuX94QgT6+Do+7oWbtio=\", true);\n_c = Shippingscreen;\nexport default Shippingscreen;\nvar _c;\n$RefreshReg$(_c, \"Shippingscreen\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Shippingscreen","_s","cart","useSelector","state","shippingAddress","dispatch","useDispatch","address","setAddress","useState","city","setCity","postalCode","setPostalCode","country","setCountry","submitHandler","e","preventDefault","saveShippingAddress","history","push","FormContainer","children","CheckoutSteps","step1","step2","fileName","_jsxFileName","lineNumber","columnNumber","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","value","onChange","target","Button","variant","_c","$RefreshReg$"],"sources":["D:/PROJECT DJANGO/frontend/src/component/Shippingscreen.js"],"sourcesContent":["import React from 'react'\r\n\r\nfunction Shippingscreen() {\r\n  const cart = useSelector(state => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const submitHandler = (e) => {\r\n      e.preventDefault()\r\n      dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n      history.push('/payment')\r\n  }\r\n\r\n  return (\r\n      <FormContainer>\r\n          <CheckoutSteps step1 step2 />\r\n          <h1>Shipping</h1>\r\n          <Form onSubmit={submitHandler}>\r\n\r\n              <Form.Group controlId='address'>\r\n                  <Form.Label>Address</Form.Label>\r\n                  <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter address'\r\n                      value={address ? address : ''}\r\n                      onChange={(e) => setAddress(e.target.value)}\r\n                  >\r\n                  </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='city'>\r\n                  <Form.Label>City</Form.Label>\r\n                  <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter city'\r\n                      value={city ? city : ''}\r\n                      onChange={(e) => setCity(e.target.value)}\r\n                  >\r\n                  </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='postalCode'>\r\n                  <Form.Label>Postal Code</Form.Label>\r\n                  <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter postal code'\r\n                      value={postalCode ? postalCode : ''}\r\n                      onChange={(e) => setPostalCode(e.target.value)}\r\n                  >\r\n                  </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='country'>\r\n                  <Form.Label>Country</Form.Label>\r\n                  <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter country'\r\n                      value={country ? country : ''}\r\n                      onChange={(e) => setCountry(e.target.value)}\r\n                  >\r\n                  </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Button type='submit' variant='primary'>\r\n                  Continue\r\n              </Button>\r\n          </Form>\r\n      </FormContainer>\r\n  )\r\n}\r\n\r\nexport default Shippingscreen"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAMC,IAAI,GAAGC,WAAW,CAACC,KAAK,IAAIA,KAAK,CAACF,IAAI,CAAC;EAC7C,MAAM;IAAEG;EAAgB,CAAC,GAAGH,IAAI;EAEhC,MAAMI,QAAQ,GAAGC,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAACL,eAAe,CAACG,OAAO,CAAC;EAC/D,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGF,QAAQ,CAACL,eAAe,CAACM,IAAI,CAAC;EACtD,MAAM,CAACE,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAACL,eAAe,CAACQ,UAAU,CAAC;EACxE,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAACL,eAAe,CAACU,OAAO,CAAC;EAE/D,MAAME,aAAa,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBb,QAAQ,CAACc,mBAAmB,CAAC;MAAEZ,OAAO;MAAEG,IAAI;MAAEE,UAAU;MAAEE;IAAQ,CAAC,CAAC,CAAC;IACrEM,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;EAC5B,CAAC;EAED,oBACIvB,OAAA,CAACwB,aAAa;IAAAC,QAAA,gBACVzB,OAAA,CAAC0B,aAAa;MAACC,KAAK;MAACC,KAAK;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7BhC,OAAA;MAAAyB,QAAA,EAAI;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBhC,OAAA,CAACiC,IAAI;MAACC,QAAQ,EAAEhB,aAAc;MAAAO,QAAA,gBAE1BzB,OAAA,CAACiC,IAAI,CAACE,KAAK;QAACC,SAAS,EAAC,SAAS;QAAAX,QAAA,gBAC3BzB,OAAA,CAACiC,IAAI,CAACI,KAAK;UAAAZ,QAAA,EAAC;QAAO;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAChChC,OAAA,CAACiC,IAAI,CAACK,OAAO;UACTC,QAAQ;UACRC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,eAAe;UAC3BC,KAAK,EAAEjC,OAAO,GAAGA,OAAO,GAAG,EAAG;UAC9BkC,QAAQ,EAAGxB,CAAC,IAAKT,UAAU,CAACS,CAAC,CAACyB,MAAM,CAACF,KAAK;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAElC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eAEbhC,OAAA,CAACiC,IAAI,CAACE,KAAK;QAACC,SAAS,EAAC,MAAM;QAAAX,QAAA,gBACxBzB,OAAA,CAACiC,IAAI,CAACI,KAAK;UAAAZ,QAAA,EAAC;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC7BhC,OAAA,CAACiC,IAAI,CAACK,OAAO;UACTC,QAAQ;UACRC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,YAAY;UACxBC,KAAK,EAAE9B,IAAI,GAAGA,IAAI,GAAG,EAAG;UACxB+B,QAAQ,EAAGxB,CAAC,IAAKN,OAAO,CAACM,CAAC,CAACyB,MAAM,CAACF,KAAK;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE/B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eAEbhC,OAAA,CAACiC,IAAI,CAACE,KAAK;QAACC,SAAS,EAAC,YAAY;QAAAX,QAAA,gBAC9BzB,OAAA,CAACiC,IAAI,CAACI,KAAK;UAAAZ,QAAA,EAAC;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACpChC,OAAA,CAACiC,IAAI,CAACK,OAAO;UACTC,QAAQ;UACRC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,mBAAmB;UAC/BC,KAAK,EAAE5B,UAAU,GAAGA,UAAU,GAAG,EAAG;UACpC6B,QAAQ,EAAGxB,CAAC,IAAKJ,aAAa,CAACI,CAAC,CAACyB,MAAM,CAACF,KAAK;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAErC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eAEbhC,OAAA,CAACiC,IAAI,CAACE,KAAK;QAACC,SAAS,EAAC,SAAS;QAAAX,QAAA,gBAC3BzB,OAAA,CAACiC,IAAI,CAACI,KAAK;UAAAZ,QAAA,EAAC;QAAO;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAChChC,OAAA,CAACiC,IAAI,CAACK,OAAO;UACTC,QAAQ;UACRC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,eAAe;UAC3BC,KAAK,EAAE1B,OAAO,GAAGA,OAAO,GAAG,EAAG;UAC9B2B,QAAQ,EAAGxB,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACyB,MAAM,CAACF,KAAK;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAElC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eAEbhC,OAAA,CAAC6C,MAAM;QAACL,IAAI,EAAC,QAAQ;QAACM,OAAO,EAAC,SAAS;QAAArB,QAAA,EAAC;MAExC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEtB;AAAC9B,EAAA,CA7EQD,cAAc;AAAA8C,EAAA,GAAd9C,cAAc;AA+EvB,eAAeA,cAAc;AAAA,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}